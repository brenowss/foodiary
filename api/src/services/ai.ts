import OpenAI, { toFile } from 'openai';

const client = new OpenAI();

export async function transcribeAudio(fileBuffer: Buffer) {
  const transcription = await client.audio.transcriptions.create({
    model: 'whisper-1',
    language: 'pt',
    response_format: 'text',
    file: await toFile(fileBuffer, 'audio.m4a', { type: 'audio/m4a' }),
  });

  return transcription;
}

type GetMealDetailsFromTextParams = {
  text: string;
  createdAt: Date;
};

export async function getMealDetailsFromText({
  createdAt,
  text,
}: GetMealDetailsFromTextParams) {
  const response = await client.chat.completions.create({
    model: 'gpt-4.1-mini',
    messages: [
      {
        role: 'system',
        content: `
          Voc√™ √© um nutricionista e est√° atendendo um de seus pacientes. Voc√™ deve responder para ele seguindo as instru√ß√µes a baixo.

          Seu papel √©:
          1. Dar um nome e escolher um emoji para a refei√ß√£o baseado no hor√°rio dela.
          2. Determinar o tipo/slot da refei√ß√£o baseado em M√öLTIPLOS FATORES (em ordem de prioridade):
             
             PRIORIDADE 1 - MEN√á√ÉO EXPL√çCITA DO USU√ÅRIO:
             Se o usu√°rio mencionar explicitamente a refei√ß√£o (ex: "caf√© da manh√£", "almo√ßo", "lanche da tarde", "jantar", "ceia"), use essa informa√ß√£o.
             
             PRIORIDADE 2 - TIPO DE ALIMENTO/CONTEXTO:
             - Alimentos t√≠picos de caf√© da manh√£: p√£o, caf√©, leite, frutas, cereais, iogurte, ovos, tapioca, vitamina, suco
             - Alimentos t√≠picos de almo√ßo: arroz, feij√£o, carnes, saladas, massas, pratos principais completos
             - Alimentos t√≠picos de lanche: biscoitos, frutas, iogurte, sandu√≠ches leves, doces, caf√©
             - Alimentos t√≠picos de jantar: similar ao almo√ßo mas pode ser mais leve, sopas, sandu√≠ches
             - Extra: bebidas alco√≥licas, petiscos, sobremesas isoladas, lanches noturnos
             
             PRIORIDADE 3 - HOR√ÅRIO:
             - "breakfast" para caf√© da manh√£ (5h √†s 11h)
             - "lunch" para almo√ßo (11h √†s 15h)
             - "snack" para lanche (15h √†s 18h)
             - "dinner" para jantar (18h √†s 23h)
             - "extra" para outros hor√°rios ou quando n√£o se encaixar nas categorias acima
             
          3. Identificar os alimentos presentes na descri√ß√£o.
          4. Estimar, para cada alimento identificado:
            - Nome do alimento (em portugu√™s)
            - Quantidade aproximada (em gramas ou unidades)
            - Calorias (kcal)
            - Carboidratos (g)
            - Prote√≠nas (g)
            - Gorduras (g)

          IMPORTANTE: Analise primeiro se o usu√°rio mencionou qual refei√ß√£o √© (ex: "meu caf√© da manh√£ foi...", "no almo√ßo comi...", "jantar hoje"), depois o tipo de alimento, e por √∫ltimo o hor√°rio.

          Seja direto, objetivo e evite explica√ß√µes. Apenas retorne os dados em JSON seguindo EXATAMENTE esta estrutura:

          FORMATO DE RETORNO (DTO):
          {
            "name": string,              // Nome descritivo da refei√ß√£o (ex: "Caf√© da Manh√£", "Almo√ßo Completo", "Lanche da Tarde")
            "icon": string,              // Emoji representativo dos alimentos principais (ex: "üç≥", "üçΩÔ∏è", "üç™", "ü•ó")
            "key": "breakfast" | "lunch" | "snack" | "dinner" | "extra",  // Slot da refei√ß√£o conforme prioridades
            "foods": [
              {
                "name": string,          // Nome completo do alimento em portugu√™s
                "quantity": string,      // Quantidade com unidade (ex: "100g", "1 unidade", "200ml")
                "calories": number,      // Calorias em kcal (n√∫mero inteiro)
                "carbohydrates": number, // Carboidratos em gramas (uma casa decimal)
                "proteins": number,      // Prote√≠nas em gramas (uma casa decimal)
                "fats": number          // Gorduras em gramas (uma casa decimal)
              }
            ]
          }

          OBSERVA√á√ïES:
          - Use nomes espec√≠ficos para alimentos (ex: "P√£o franc√™s" ao inv√©s de "p√£o")
          - Quantidades devem ser realistas e espec√≠ficas
          - Valores nutricionais devem ser precisos baseados em tabelas nutricionais
          - O campo "key" deve seguir rigorosamente as prioridades estabelecidas
        `,
      },
      {
        role: 'user',
        content: `
          Data e hor√°rio: ${createdAt.toLocaleString('pt-BR', {
            timeZone: 'America/Sao_Paulo',
          })}
          Refei√ß√£o: ${text}
        `,
      },
    ],
  });

  const json = response.choices[0].message.content;

  if (!json) {
    throw new Error('Failed to process meal.');
  }

  return JSON.parse(json);
}

type GetMealDetailsFromImageParams = {
  imageURL: string;
  createdAt: Date;
  description?: string;
};

export async function getMealDetailsFromImage({
  createdAt,
  imageURL,
  description,
}: GetMealDetailsFromImageParams) {
  const response = await client.chat.completions.create({
    model: 'gpt-4.1-mini',
    messages: [
      {
        role: 'system',
        content: `
          Voc√™ √© um nutricionista especializado em an√°lise de alimentos por imagem. A imagem a seguir foi tirada por um usu√°rio com o objetivo de registrar sua refei√ß√£o.

          Seu papel √©:
          1. Dar um nome e escolher um emoji para a refei√ß√£o baseado no hor√°rio dela.
          2. Determinar o tipo/slot da refei√ß√£o baseado em M√öLTIPLOS FATORES (em ordem de prioridade):
             
             PRIORIDADE 1 - CONTEXTO VISUAL E APRESENTA√á√ÉO:
             Analise o contexto da imagem (mesa caf√© da manh√£, prato de almo√ßo, lanche r√°pido, etc.)
             
             PRIORIDADE 2 - TIPO DE ALIMENTO/COMPOSI√á√ÉO:
             - Alimentos t√≠picos de caf√© da manh√£: p√£o, caf√©, leite, frutas, cereais, iogurte, ovos, tapioca, vitamina, suco, pratos simples/leves
             - Alimentos t√≠picos de almo√ßo: arroz, feij√£o, carnes, saladas, massas, pratos principais completos, refei√ß√µes elaboradas
             - Alimentos t√≠picos de lanche: biscoitos, frutas, iogurte, sandu√≠ches leves, doces, caf√©, petiscos pequenos
             - Alimentos t√≠picos de jantar: similar ao almo√ßo mas pode ser mais leve, sopas, sandu√≠ches, pratos noturnos
             - Extra: bebidas alco√≥licas, petiscos, sobremesas isoladas, lanches noturnos, fast food
             
             PRIORIDADE 3 - HOR√ÅRIO:
             - "breakfast" para caf√© da manh√£ (5h √†s 11h)
             - "lunch" para almo√ßo (11h √†s 15h)
             - "snack" para lanche (15h √†s 18h)
             - "dinner" para jantar (18h √†s 23h)
             - "extra" para outros hor√°rios ou quando n√£o se encaixar nas categorias acima
             
          3. Identificar os alimentos presentes na imagem.
          4. Estimar, para cada alimento identificado:
            - Nome do alimento (em portugu√™s)
            - Quantidade aproximada (em gramas ou unidades)
            - Calorias (kcal)
            - Carboidratos (g)
            - Prote√≠nas (g)
            - Gorduras (g)

          IMPORTANTE: Analise primeiro o contexto visual e tipo dos alimentos mostrados na imagem para identificar que tipo de refei√ß√£o √©, e s√≥ depois considere o hor√°rio.

          Considere propor√ß√µes e volume vis√≠vel para estimar a quantidade. Quando houver incerteza sobre o tipo exato do alimento (por exemplo, tipo de arroz, corte de carne), use o tipo mais comum. Seja direto, objetivo e evite explica√ß√µes. Apenas retorne os dados em JSON seguindo EXATAMENTE esta estrutura:

          FORMATO DE RETORNO (DTO):
          {
            "name": string,              // Nome descritivo da refei√ß√£o (ex: "Caf√© da Manh√£", "Almo√ßo Completo", "Lanche da Tarde")
            "icon": string,              // Emoji representativo dos alimentos principais (ex: "üç≥", "üçΩÔ∏è", "üç™", "ü•ó")
            "key": "breakfast" | "lunch" | "snack" | "dinner" | "extra",  // Slot da refei√ß√£o conforme prioridades
            "foods": [
              {
                "name": string,          // Nome completo do alimento em portugu√™s
                "quantity": string,      // Quantidade com unidade (ex: "100g", "1 unidade", "200ml")
                "calories": number,      // Calorias em kcal (n√∫mero inteiro)
                "carbohydrates": number, // Carboidratos em gramas (uma casa decimal)
                "proteins": number,      // Prote√≠nas em gramas (uma casa decimal)
                "fats": number          // Gorduras em gramas (uma casa decimal)
              }
            ]
          }

          OBSERVA√á√ïES:
          - Use nomes espec√≠ficos para alimentos (ex: "P√£o franc√™s" ao inv√©s de "p√£o")
          - Quantidades devem ser realistas e espec√≠ficas
          - Valores nutricionais devem ser precisos baseados em tabelas nutricionais
          - O campo "key" deve seguir rigorosamente as prioridades estabelecidas
        `,
      },
      {
        role: 'user',
        content: [
          {
            type: 'text',
            text: `Data e hor√°rio: ${createdAt.toLocaleString('pt-BR', {
              timeZone: 'America/Sao_Paulo',
            })}${
              description ? `\n\nDescri√ß√£o do usu√°rio: "${description}"` : ''
            }`,
          },
          {
            type: 'image_url',
            image_url: {
              url: imageURL,
            },
          },
        ],
      },
    ],
  });

  const json = response.choices[0].message.content;

  if (!json) {
    throw new Error('Failed to process meal.');
  }

  return JSON.parse(json);
}
